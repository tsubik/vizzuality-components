{"version":3,"file":"index.esm.js","sources":["../../../../../../src/components/legend/components/legend-item-types/legend-item-type-basic/legend-item-type-basic-item/index.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './styles.scss';\n\nclass LegendItem extends React.PureComponent {\n  static propTypes = {\n    size: PropTypes.number,\n    color: PropTypes.string,\n    name: PropTypes.string,\n    icon: PropTypes.string, // triangle, circle, square, line\n    hideIcon: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    size: 12,\n    color: 'transparent',\n    name: '',\n    icon: 'square',\n    hideIcon: false,\n  };\n\n  getIconHtml = (iconName) => {\n    const { name, hideIcon, color, size, icon } = this.props;\n\n    if (hideIcon) {\n      return null;\n    }\n\n    if (iconName === 'triangle') {\n      return (\n        <div\n          styleName={`icon-${icon}`}\n          style={{\n            boderRightWidth: size / 2,\n            boderLeftWidth: size / 2,\n            boderBottomWidth: size,\n            borderBottomColor: color,\n          }}\n        />\n      );\n    }\n\n    if (iconName === 'line') {\n      return <div styleName={`icon-${icon}`} style={{ width: size, backgroundColor: color }} />;\n    }\n\n    if (iconName === 'square' || iconName === 'circle') {\n      return (\n        <div\n          styleName={`icon-${icon}`}\n          style={{ width: size, height: size, backgroundColor: color }}\n        />\n      );\n    }\n\n    return (\n      <div styleName=\"custom-icon\">\n        <img src={icon} alt={name} />\n      </div>\n    );\n  };\n\n  render() {\n    const { name, icon } = this.props;\n\n    return (\n      <div styleName=\"c-legend-item-basic\">\n        {this.getIconHtml(icon)}\n\n        <span styleName=\"name\">{name}</span>\n      </div>\n    );\n  }\n}\n\nexport default LegendItem;\n"],"names":["LegendItem","iconName","props","name","hideIcon","color","size","icon","boderRightWidth","boderLeftWidth","boderBottomWidth","borderBottomColor","width","backgroundColor","height","getIconHtml","React","PureComponent","PropTypes","number","string","bool"],"mappings":";;;;;;;;;;;;;;;;;;IAIMA;;;;;;;;;;;;;;;;kEAiBU,UAACC,QAAD,EAAc;AAAA,wBACoB,MAAKC,KADzB;AAAA,UAClBC,IADkB,eAClBA,IADkB;AAAA,UACZC,QADY,eACZA,QADY;AAAA,UACFC,KADE,eACFA,KADE;AAAA,UACKC,IADL,eACKA,IADL;AAAA,UACWC,IADX,eACWA,IADX;;AAG1B,UAAIH,QAAJ,EAAc;AACZ,eAAO,IAAP;AACD;;AAED,UAAIH,QAAQ,KAAK,UAAjB,EAA6B;AAC3B,4BACE;AAEE,UAAA,KAAK,EAAE;AACLO,YAAAA,eAAe,EAAEF,IAAI,GAAG,CADnB;AAELG,YAAAA,cAAc,EAAEH,IAAI,GAAG,CAFlB;AAGLI,YAAAA,gBAAgB,EAAEJ,IAHb;AAILK,YAAAA,iBAAiB,EAAEN;AAJd,WAFT;AAAA,kDACqBE,IADrB;AAAA,UADF;AAWD;;AAED,UAAIN,QAAQ,KAAK,MAAjB,EAAyB;AACvB,4BAAO;AAAgC,UAAA,KAAK,EAAE;AAAEW,YAAAA,KAAK,EAAEN,IAAT;AAAeO,YAAAA,eAAe,EAAER;AAAhC,WAAvC;AAAA,kDAAwBE,IAAxB;AAAA,UAAP;AACD;;AAED,UAAIN,QAAQ,KAAK,QAAb,IAAyBA,QAAQ,KAAK,QAA1C,EAAoD;AAClD,4BACE;AAEE,UAAA,KAAK,EAAE;AAAEW,YAAAA,KAAK,EAAEN,IAAT;AAAeQ,YAAAA,MAAM,EAAER,IAAvB;AAA6BO,YAAAA,eAAe,EAAER;AAA9C,WAFT;AAAA,kDACqBE,IADrB;AAAA,UADF;AAMD;;AAED,0BACE;AAAK,QAAA,SAAS,EAAC;AAAf,sBACE;AAAK,QAAA,GAAG,EAAEA,IAAV;AAAgB,QAAA,GAAG,EAAEJ;AAArB,QADF,CADF;AAKD;;;;;;;6BAEQ;AAAA,yBACgB,KAAKD,KADrB;AAAA,UACCC,IADD,gBACCA,IADD;AAAA,UACOI,IADP,gBACOA,IADP;AAGP,0BACE;AAAK,QAAA,SAAS,EAAC;AAAf,SACG,KAAKQ,WAAL,CAAiBR,IAAjB,CADH,eAGE;AAAM,QAAA,SAAS,EAAC;AAAhB,SAAwBJ,IAAxB,CAHF,CADF;AAOD;;;;EApEsBa,KAAK,CAACC;;gBAAzBjB,yBACe;AACjBM,EAAAA,IAAI,EAAEY,SAAS,CAACC,MADC;AAEjBd,EAAAA,KAAK,EAAEa,SAAS,CAACE,MAFA;AAGjBjB,EAAAA,IAAI,EAAEe,SAAS,CAACE,MAHC;AAIjBb,EAAAA,IAAI,EAAEW,SAAS,CAACE,MAJC;AAIO;AACxBhB,EAAAA,QAAQ,EAAEc,SAAS,CAACG;AALH;;gBADfrB,4BASkB;AACpBM,EAAAA,IAAI,EAAE,EADc;AAEpBD,EAAAA,KAAK,EAAE,aAFa;AAGpBF,EAAAA,IAAI,EAAE,EAHc;AAIpBI,EAAAA,IAAI,EAAE,QAJc;AAKpBH,EAAAA,QAAQ,EAAE;AALU;;;;"}