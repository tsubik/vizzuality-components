{"version":3,"file":"index.esm.js","sources":["../../../../../src/components/legend/components/legend-item-types/legend-item-type-gradient/index.js"],"sourcesContent":["import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport './styles.scss';\n\nclass LegendTypeGradient extends PureComponent {\n  static propTypes = {\n    // Props\n    activeLayer: PropTypes.shape({}),\n  };\n\n  static defaultProps = {\n    // Props\n    activeLayer: {},\n  };\n\n  render() {\n    const { activeLayer } = this.props;\n    const { legendConfig } = activeLayer;\n\n    if (!legendConfig || legendConfig.type !== 'gradient') {\n      return null;\n    }\n\n    const items = legendConfig.items.filter((item) => item.color !== 'transparent');\n    const itemTransparent = legendConfig.items.find((item) => item.color === 'transparent');\n    const gradient = items.map((item) => item.color);\n\n    return (\n      <div styleName=\"c-legend-type-gradient\">\n        <div styleName=\"legend-gradient-icon\">\n          {itemTransparent && (\n            <div\n              style={{ width: `${(1 / legendConfig.items.length) * 100}%` }}\n              styleName=\"icon-gradient-transparent\"\n            />\n          )}\n          <div\n            styleName=\"icon-gradient\"\n            style={{\n              width: `${(items.length / legendConfig.items.length) * 100}%`,\n              backgroundImage: `linear-gradient(to right, ${gradient.join(',')})`,\n            }}\n          />\n        </div>\n        <ul>\n          {legendConfig.items.map(({ name, color, value }) =>\n            name || value ? (\n              <li key={`legend-gradient-item-${color}-${value}-${name}`}>\n                <span styleName=\"name\">{name || value}</span>\n              </li>\n            ) : null\n          )}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default LegendTypeGradient;\n"],"names":["LegendTypeGradient","activeLayer","props","legendConfig","type","items","filter","item","color","itemTransparent","find","gradient","map","width","length","backgroundImage","join","name","value","PureComponent","PropTypes","shape"],"mappings":";;;;IAIMA;;;;;;;;;;;;;6BAWK;AAAA,UACCC,WADD,GACiB,KAAKC,KADtB,CACCD,WADD;AAAA,UAECE,YAFD,GAEkBF,WAFlB,CAECE,YAFD;;AAIP,UAAI,CAACA,YAAD,IAAiBA,YAAY,CAACC,IAAb,KAAsB,UAA3C,EAAuD;AACrD,eAAO,IAAP;AACD;;AAED,UAAMC,KAAK,GAAGF,YAAY,CAACE,KAAb,CAAmBC,MAAnB,CAA0B,UAACC,IAAD;AAAA,eAAUA,IAAI,CAACC,KAAL,KAAe,aAAzB;AAAA,OAA1B,CAAd;AACA,UAAMC,eAAe,GAAGN,YAAY,CAACE,KAAb,CAAmBK,IAAnB,CAAwB,UAACH,IAAD;AAAA,eAAUA,IAAI,CAACC,KAAL,KAAe,aAAzB;AAAA,OAAxB,CAAxB;AACA,UAAMG,QAAQ,GAAGN,KAAK,CAACO,GAAN,CAAU,UAACL,IAAD;AAAA,eAAUA,IAAI,CAACC,KAAf;AAAA,OAAV,CAAjB;AAEA,0BACE;AAAK,QAAA,SAAS,EAAC;AAAf,sBACE;AAAK,QAAA,SAAS,EAAC;AAAf,SACGC,eAAe,iBACd;AACE,QAAA,KAAK,EAAE;AAAEI,UAAAA,KAAK,YAAM,IAAIV,YAAY,CAACE,KAAb,CAAmBS,MAAxB,GAAkC,GAAvC;AAAP,SADT;AAEE,QAAA,SAAS,EAAC;AAFZ,QAFJ,eAOE;AACE,QAAA,SAAS,EAAC,2BADZ;AAEE,QAAA,KAAK,EAAE;AACLD,UAAAA,KAAK,YAAMR,KAAK,CAACS,MAAN,GAAeX,YAAY,CAACE,KAAb,CAAmBS,MAAnC,GAA6C,GAAlD,MADA;AAELC,UAAAA,eAAe,sCAA+BJ,QAAQ,CAACK,IAAT,CAAc,GAAd,CAA/B;AAFV;AAFT,QAPF,CADF,eAgBE,gCACGb,YAAY,CAACE,KAAb,CAAmBO,GAAnB,CAAuB;AAAA,YAAGK,IAAH,QAAGA,IAAH;AAAA,YAAST,KAAT,QAASA,KAAT;AAAA,YAAgBU,KAAhB,QAAgBA,KAAhB;AAAA,eACtBD,IAAI,IAAIC,KAAR,gBACE;AAAI,UAAA,GAAG,iCAA0BV,KAA1B,cAAmCU,KAAnC,cAA4CD,IAA5C;AAAP,wBACE;AAAM,UAAA,SAAS,EAAC;AAAhB,WAAwBA,IAAI,IAAIC,KAAhC,CADF,CADF,GAII,IALkB;AAAA,OAAvB,CADH,CAhBF,CADF;AA4BD;;;;EAnD8BC;;gBAA3BnB,iCACe;AACjB;AACAC,EAAAA,WAAW,EAAEmB,SAAS,CAACC,KAAV,CAAgB,EAAhB;AAFI;;gBADfrB,oCAMkB;AACpB;AACAC,EAAAA,WAAW,EAAE;AAFO;;;;"}