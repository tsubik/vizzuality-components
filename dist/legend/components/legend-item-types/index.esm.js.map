{"version":3,"file":"index.esm.js","sources":["../../../../src/components/legend/components/legend-item-types/index.js"],"sourcesContent":["import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\n\nimport isEmpty from 'lodash/isEmpty';\nimport isEqual from 'lodash/isEqual';\n\nimport Spinner from 'components/spinner';\n\nimport { replace } from './utils';\nimport LegendItemTypeBasic from './legend-item-type-basic';\nimport LegendItemTypeChoropleth from './legend-item-type-choropleth';\nimport LegendItemTypeGradient from './legend-item-type-gradient';\nimport LegendItemTypeProportional from './legend-item-type-proportional';\nimport './styles.scss';\n\nclass LegendItemTypes extends PureComponent {\n  static propTypes = {\n    // Props\n    children: PropTypes.node,\n    activeLayer: PropTypes.object,\n  };\n\n  static defaultProps = {\n    // Props\n    children: [],\n    activeLayer: {},\n  };\n\n  state = {\n    activeLayer: {},\n    loading: false,\n  };\n\n  componentDidMount() {\n    const { activeLayer } = this.props;\n    const { legendConfig } = activeLayer || {};\n    const { params = {}, sqlParams = {} } = legendConfig || {};\n\n    const parsedConfig = replace(JSON.stringify(legendConfig), params, sqlParams);\n    const { url } = JSON.parse(parsedConfig);\n\n    if (url) {\n      this.fetchLegend(url);\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    const { activeLayer: prevActiveLayer } = prevProps;\n    const { legendConfig: prevLegendConfig } = prevActiveLayer;\n    const { params: prevParams = {}, sqlParams: prevSqlParams = {} } = prevLegendConfig;\n\n    const { activeLayer: nextActiveLayer } = this.props;\n    const { legendConfig: nextLegendConfig } = nextActiveLayer;\n    const { params: nextParams = {}, sqlParams: nextSqlParams = {} } = nextLegendConfig;\n\n    if (!isEqual(nextParams, prevParams) || !isEqual(nextSqlParams, prevSqlParams)) {\n      const stringifyConfig = replace(JSON.stringify(nextLegendConfig), nextParams, nextSqlParams);\n      const parsedConfig = JSON.parse(stringifyConfig);\n      const { url } = parsedConfig || {};\n\n      if (url) {\n        this.fetchLegend(url);\n      }\n    }\n  }\n\n  fetchLegend = (url) => {\n    const { activeLayer } = this.props;\n    const { legendConfig } = activeLayer || {};\n    const { dataParse } = legendConfig || {};\n    this.setState({ loading: true });\n\n    fetch(url)\n      .then((response) => {\n        if (response.ok) return response.json();\n      })\n      .then((response) => {\n        const parsedActiveLayer =\n          typeof dataParse === 'function' ? dataParse(activeLayer, response) : response;\n        this.setState({ activeLayer: parsedActiveLayer, loading: false });\n      })\n      .catch(() => {\n        this.setState({ loading: false });\n      });\n  };\n\n  render() {\n    const { children, activeLayer: propsActiveLayer } = this.props;\n    const { loading, activeLayer: stateActiveLayer } = this.state;\n    const activeLayer = !isEmpty(stateActiveLayer) ? stateActiveLayer : propsActiveLayer;\n\n    const { legendConfig } = activeLayer || {};\n    const { url } = legendConfig || {};\n    const shouldRender = !url || (url && !isEmpty(stateActiveLayer));\n\n    return (\n      <div styleName=\"c-legend-item-types\">\n        {url && loading && (\n          <Spinner\n            position=\"relative\"\n            style={{\n              box: { width: 20, height: 20 },\n            }}\n          />\n        )}\n\n        {shouldRender &&\n          !!React.Children.count(children) &&\n          React.Children.map(children, (child) =>\n            React.isValidElement(child) && typeof child.type !== 'string'\n              ? React.cloneElement(child, { ...this.props })\n              : child\n          )}\n\n        {/* If there is no children defined, let's use the components we have */}\n        {shouldRender && !React.Children.count(children) && <LegendItemTypeBasic {...this.props} />}\n        {shouldRender && !React.Children.count(children) && (\n          <LegendItemTypeChoropleth {...this.props} />\n        )}\n        {shouldRender && !React.Children.count(children) && (\n          <LegendItemTypeGradient {...this.props} />\n        )}\n        {shouldRender && !React.Children.count(children) && (\n          <LegendItemTypeProportional {...this.props} />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default LegendItemTypes;\n\nexport {\n  LegendItemTypeBasic,\n  LegendItemTypeChoropleth,\n  LegendItemTypeGradient,\n  LegendItemTypeProportional,\n};\n"],"names":["LegendItemTypes","activeLayer","loading","url","props","legendConfig","dataParse","setState","fetch","then","response","ok","json","parsedActiveLayer","catch","params","sqlParams","parsedConfig","replace","JSON","stringify","parse","fetchLegend","prevProps","prevActiveLayer","prevLegendConfig","prevParams","prevSqlParams","nextActiveLayer","nextLegendConfig","nextParams","nextSqlParams","isEqual","stringifyConfig","children","propsActiveLayer","state","stateActiveLayer","isEmpty","shouldRender","box","width","height","React","Children","count","map","child","isValidElement","type","cloneElement","LegendItemTypeBasic","LegendItemTypeChoropleth","LegendItemTypeGradient","LegendItemTypeProportional","PureComponent","PropTypes","node","object"],"mappings":";;;;;;;;;;;;;;;;IAeMA;;;;;;;;;;;;;;;;4DAaI;AACNC,MAAAA,WAAW,EAAE,EADP;AAENC,MAAAA,OAAO,EAAE;AAFH;;kEAsCM,UAACC,GAAD,EAAS;AAAA,UACbF,WADa,GACG,MAAKG,KADR,CACbH,WADa;;AAAA,iBAEIA,WAAW,IAAI,EAFnB;AAAA,UAEbI,YAFa,QAEbA,YAFa;;AAAA,kBAGCA,YAAY,IAAI,EAHjB;AAAA,UAGbC,SAHa,SAGbA,SAHa;;AAIrB,YAAKC,QAAL,CAAc;AAAEL,QAAAA,OAAO,EAAE;AAAX,OAAd;;AAEAM,MAAAA,KAAK,CAACL,GAAD,CAAL,CACGM,IADH,CACQ,UAACC,QAAD,EAAc;AAClB,YAAIA,QAAQ,CAACC,EAAb,EAAiB,OAAOD,QAAQ,CAACE,IAAT,EAAP;AAClB,OAHH,EAIGH,IAJH,CAIQ,UAACC,QAAD,EAAc;AAClB,YAAMG,iBAAiB,GACrB,OAAOP,SAAP,KAAqB,UAArB,GAAkCA,SAAS,CAACL,WAAD,EAAcS,QAAd,CAA3C,GAAqEA,QADvE;;AAEA,cAAKH,QAAL,CAAc;AAAEN,UAAAA,WAAW,EAAEY,iBAAf;AAAkCX,UAAAA,OAAO,EAAE;AAA3C,SAAd;AACD,OARH,EASGY,KATH,CASS,YAAM;AACX,cAAKP,QAAL,CAAc;AAAEL,UAAAA,OAAO,EAAE;AAAX,SAAd;AACD,OAXH;AAYD;;;;;;;wCAnDmB;AAAA,UACVD,WADU,GACM,KAAKG,KADX,CACVH,WADU;;AAAA,kBAEOA,WAAW,IAAI,EAFtB;AAAA,UAEVI,YAFU,SAEVA,YAFU;;AAAA,kBAGsBA,YAAY,IAAI,EAHtC;AAAA,+BAGVU,MAHU;AAAA,UAGVA,MAHU,6BAGD,EAHC;AAAA,kCAGGC,SAHH;AAAA,UAGGA,SAHH,gCAGe,EAHf;;AAKlB,UAAMC,YAAY,GAAGC,OAAO,CAACC,IAAI,CAACC,SAAL,CAAef,YAAf,CAAD,EAA+BU,MAA/B,EAAuCC,SAAvC,CAA5B;;AALkB,wBAMFG,IAAI,CAACE,KAAL,CAAWJ,YAAX,CANE;AAAA,UAMVd,GANU,eAMVA,GANU;;AAQlB,UAAIA,GAAJ,EAAS;AACP,aAAKmB,WAAL,CAAiBnB,GAAjB;AACD;AACF;;;uCAEkBoB,WAAW;AAAA,UACPC,eADO,GACaD,SADb,CACpBtB,WADoB;AAAA,UAENwB,gBAFM,GAEeD,eAFf,CAEpBnB,YAFoB;AAAA,kCAGuCoB,gBAHvC,CAGpBV,MAHoB;AAAA,UAGZW,UAHY,sCAGC,EAHD;AAAA,kCAGuCD,gBAHvC,CAGKT,SAHL;AAAA,UAGgBW,aAHhB,sCAGgC,EAHhC;AAAA,UAKPC,eALO,GAKa,KAAKxB,KALlB,CAKpBH,WALoB;AAAA,UAMN4B,gBANM,GAMeD,eANf,CAMpBvB,YANoB;AAAA,kCAOuCwB,gBAPvC,CAOpBd,MAPoB;AAAA,UAOZe,UAPY,sCAOC,EAPD;AAAA,kCAOuCD,gBAPvC,CAOKb,SAPL;AAAA,UAOgBe,aAPhB,sCAOgC,EAPhC;;AAS5B,UAAI,CAACC,OAAO,CAACF,UAAD,EAAaJ,UAAb,CAAR,IAAoC,CAACM,OAAO,CAACD,aAAD,EAAgBJ,aAAhB,CAAhD,EAAgF;AAC9E,YAAMM,eAAe,GAAGf,OAAO,CAACC,IAAI,CAACC,SAAL,CAAeS,gBAAf,CAAD,EAAmCC,UAAnC,EAA+CC,aAA/C,CAA/B;AACA,YAAMd,YAAY,GAAGE,IAAI,CAACE,KAAL,CAAWY,eAAX,CAArB;;AAF8E,oBAG9DhB,YAAY,IAAI,EAH8C;AAAA,YAGtEd,GAHsE,SAGtEA,GAHsE;;AAK9E,YAAIA,GAAJ,EAAS;AACP,eAAKmB,WAAL,CAAiBnB,GAAjB;AACD;AACF;AACF;;;6BAsBQ;AAAA;;AAAA,wBAC6C,KAAKC,KADlD;AAAA,UACC8B,QADD,eACCA,QADD;AAAA,UACwBC,gBADxB,eACWlC,WADX;AAAA,wBAE4C,KAAKmC,KAFjD;AAAA,UAEClC,OAFD,eAECA,OAFD;AAAA,UAEuBmC,gBAFvB,eAEUpC,WAFV;AAGP,UAAMA,WAAW,GAAG,CAACqC,OAAO,CAACD,gBAAD,CAAR,GAA6BA,gBAA7B,GAAgDF,gBAApE;;AAHO,kBAKkBlC,WAAW,IAAI,EALjC;AAAA,UAKCI,YALD,SAKCA,YALD;;AAAA,kBAMSA,YAAY,IAAI,EANzB;AAAA,UAMCF,GAND,SAMCA,GAND;;AAOP,UAAMoC,YAAY,GAAG,CAACpC,GAAD,IAASA,GAAG,IAAI,CAACmC,OAAO,CAACD,gBAAD,CAA7C;AAEA,0BACE;AAAK,QAAA,SAAS,EAAC;AAAf,SACGlC,GAAG,IAAID,OAAP,iBACC,oBAAC,OAAD;AACE,QAAA,QAAQ,EAAC,UADX;AAEE,QAAA,KAAK,EAAE;AACLsC,UAAAA,GAAG,EAAE;AAAEC,YAAAA,KAAK,EAAE,EAAT;AAAaC,YAAAA,MAAM,EAAE;AAArB;AADA;AAFT,QAFJ,EAUGH,YAAY,IACX,CAAC,CAACI,KAAK,CAACC,QAAN,CAAeC,KAAf,CAAqBX,QAArB,CADH,IAECS,KAAK,CAACC,QAAN,CAAeE,GAAf,CAAmBZ,QAAnB,EAA6B,UAACa,KAAD;AAAA,4BAC3BJ,KAAK,CAACK,cAAN,CAAqBD,KAArB,KAA+B,OAAOA,KAAK,CAACE,IAAb,KAAsB,QAArD,gBACIN,KAAK,CAACO,YAAN,CAAmBH,KAAnB,qBAA+B,MAAI,CAAC3C,KAApC,EADJ,GAEI2C,KAHuB;AAAA,OAA7B,CAZJ,EAmBGR,YAAY,IAAI,CAACI,KAAK,CAACC,QAAN,CAAeC,KAAf,CAAqBX,QAArB,CAAjB,iBAAmD,oBAACiB,eAAD,EAAyB,KAAK/C,KAA9B,CAnBtD,EAoBGmC,YAAY,IAAI,CAACI,KAAK,CAACC,QAAN,CAAeC,KAAf,CAAqBX,QAArB,CAAjB,iBACC,oBAACkB,oBAAD,EAA8B,KAAKhD,KAAnC,CArBJ,EAuBGmC,YAAY,IAAI,CAACI,KAAK,CAACC,QAAN,CAAeC,KAAf,CAAqBX,QAArB,CAAjB,iBACC,oBAACmB,kBAAD,EAA4B,KAAKjD,KAAjC,CAxBJ,EA0BGmC,YAAY,IAAI,CAACI,KAAK,CAACC,QAAN,CAAeC,KAAf,CAAqBX,QAArB,CAAjB,iBACC,oBAACoB,oBAAD,EAAgC,KAAKlD,KAArC,CA3BJ,CADF;AAgCD;;;;EAhH2BmD;;gBAAxBvD,8BACe;AACjB;AACAkC,EAAAA,QAAQ,EAAEsB,SAAS,CAACC,IAFH;AAGjBxD,EAAAA,WAAW,EAAEuD,SAAS,CAACE;AAHN;;gBADf1D,iCAOkB;AACpB;AACAkC,EAAAA,QAAQ,EAAE,EAFU;AAGpBjC,EAAAA,WAAW,EAAE;AAHO;;;;"}